pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- shark
-- by a2
local score
local game_objects
local shark

function _init()
  --start score counter at zero
  score=0

  --create the game objects
  game_objects={}

  --create initial objects
  shark=make_shark(8,56)

  --start the music
  --music(0)
end

function _update()
  --update all game objects
  local obj
  for obj in all(game_objects) do
    obj:update()
  end

  --filter out "dead" objects
  filter_out_finished(game_objects)
end

function _draw()
  cls(0)--clear the screen
  draw_stars()--draw stars (seeds rng)

  local obj
  for obj in all(game_objects) do
    if (obj.visible) obj:draw()
  end

  rectfill(0,0,128,6,5)
  print("score:"..score,1,1,7)
end

function draw_stars()
  srand(1)
  for i=1,50 do
    pset(rndb(0,127),rndb(8,127),rndb(5,7))
  end
  srand(time())
end
-->8
--makers
function noop()
end

function make_game_object(name,x,y,props)
  local obj={
    name=name,
    x=x,
    y=y,
    visible=true,
    update=noop,
    draw=noop,
    draw_bounding_box=function(self,color)
      rect(self.x,self.y,self.x+self.width,self.y+self.height,color)
    end,
    center=function(self)
      return self.x+self.width/2,self.y+self.height/2
    end,
    overlaps=function(self,other)
      return bounding_boxes_overlapping(self,other)
    end
  }
  --add additional properties
  local key,value
  for key,value in pairs(props) do
    obj[key]=value
  end
  --add it to the list of game objects
  add(game_objects,obj)
  --return the game object
  return obj
end

--hit detection helper functions
function rects_overlapping(left1,top1,right1,bottom1,left2,top2,right2,bottom2)
  return right1>left2 and right2>left1 and bottom1>top2 and bottom2>top1
end

function bounding_boxes_overlapping(obj1,obj2)
  return rects_overlapping(obj1.x,obj1.y,obj1.x+obj1.width,obj1.y+obj1.height,obj2.x,obj2.y,obj2.x+obj2.width,obj2.y+obj2.height)
end

function for_each_game_object(name,callback)
  local obj
  for obj in all(game_objects) do
    if obj.name==name then
      callback(obj)
    end
  end
end

function make_shark(x,y)
  return make_game_object("shark",x,y,{
    width=16,
    height=16,
    emitter_location=function(self)
      return self.x+self.width-3,self.y+3
    end,
    update=function(self)
      --shoot on (z)
      if btn(4) then
        local x,y=self:emitter_location()
        make_laser(x,y)
      else
        --shark only move when not shooting lasers
        if (btn(2) and self.y>8) self.y-=1
        if (btn(3) and self.y+self.height<128) self.y+=1
      end
    end,
    draw=function(self)
      palt(0,false)
      palt(1,true)
      sspr(0,0,16,16,self.x,self.y)
      palt()
    end,
  })
end

function make_laser(x,y)
  return make_game_object("laser",x,y,{
    width=1,
    height=1,
    update=function(self)
      self.x+=1
      if (self.x>128) self.finished=true
    end,
    draw=function(self)
      line(self.x,self.y,self.x+self.width-1,self.y+self.height-1,8)
    end
  })
end
-->8
--helpers
function rndb(low,high)
  return flr(rnd(high-low+1)+low)
end

function ternary(condition,if_true,if_false)
  return condition and if_true or if_false
end

--increment a counter, wrapping to 20000 if it risks overflowing
function increment_counter(n)
  return n+ternary(n>32000,-12000,1)
end

--decrement a counter but not below 0
function decrement_counter(n)
  return max(0,n-1)
end

function filter_out_finished(list)
  local item
  for item in all(list) do
    if item.finished then
      del(list,item)
    end
  end
end
__gfx__
11111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111611111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111661155110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6111111155555c110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
61111166666611110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66116666666666110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66166666666666610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666006660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666006660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
661776666666fff10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
61117766667777110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
61111766611111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111166111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010200000c6100c6100c6100c6100c6100c6100c6100c6100d6000d6000d6000d6000d60016600026000160016600166001660005600076000860008600086000860000600006000060000600006000060000600
000100003a010330102b01019010120100b0100801005010040100301002010020100101005000040000300002000010000100010000076001000010000110001300014000100000060000600006000060000600
011000200453500505055350050504535005050553500505045350050505535005050453500505055351750004535005050553500505025350050504535005050453500505055350050502535005050453500500
011000000454004510055300050004540045100553000500045400451005530005000454004510055300050004540045100553000500045400451005530005000454004510055300050004540045100553000500
011000001054010510115300050010540105101153000500105401051011530005001054010510115300050010540105101153000500105401051011530005001054010510115300050010540105101153000500
012000000000000000000000000000000000000000000000045440454004540045400050400504005040050404544045400554400504000000050400504005040454404540055440554004544005040000000000
012000000050000500005000050000500005000050000500105240050000500005000050000500005000050010524005000050000500005000050000500005001052400500005000050000500005000050000500
012000001052400500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
012000080454004540055400050004540045400554000500005000050010500005000050000500005000050000500005001050000500005000050000500005000050000500005000050000500005000050000500
012000100454505545045450554504545055450454505545045450554502565045450454505545045650554510505005050050500505005050050500505005050050500505005050050500505005050050500505
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
012000000454505545045450554504545055450454505545045450254504545055450454505545025450454504545055450454505545045450554504545055450454505545045450554504545055450454505545
__music__
00 05064444
00 08064344
01 090a4344
02 0b0a4344

